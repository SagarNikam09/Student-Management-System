{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagar Nikam\\\\Desktop\\\\NavG_task\\\\src\\\\context\\\\StudentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback, useMemo } from 'react';\n\n// Action types for the reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {\n  SET_STUDENTS: 'SET_STUDENTS',\n  ADD_STUDENT: 'ADD_STUDENT',\n  UPDATE_STUDENT: 'UPDATE_STUDENT',\n  DELETE_STUDENT: 'DELETE_STUDENT',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  SET_COURSES: 'SET_COURSES',\n  SET_COURSES_LOADING: 'SET_COURSES_LOADING',\n  SET_COURSES_ERROR: 'SET_COURSES_ERROR',\n  SET_SEARCH_TERM: 'SET_SEARCH_TERM',\n  SET_FILTER: 'SET_FILTER'\n};\n\n// Initial state\nconst initialState = {\n  students: [],\n  courses: [],\n  loading: false,\n  error: null,\n  coursesLoading: false,\n  coursesError: null,\n  searchTerm: '',\n  filter: 'all',\n  // all, active, graduated\n  stats: {\n    totalStudents: 0,\n    activeStudents: 0,\n    graduatedStudents: 0\n  }\n};\n\n// Reducer function to handle state updates\nconst studentReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_STUDENTS:\n      return {\n        ...state,\n        students: action.payload,\n        loading: false,\n        error: null\n      };\n    case ACTIONS.ADD_STUDENT:\n      return {\n        ...state,\n        students: [...state.students, action.payload],\n        loading: false,\n        error: null\n      };\n    case ACTIONS.UPDATE_STUDENT:\n      return {\n        ...state,\n        students: state.students.map(student => student.id === action.payload.id ? action.payload : student),\n        loading: false,\n        error: null\n      };\n    case ACTIONS.DELETE_STUDENT:\n      return {\n        ...state,\n        students: state.students.filter(student => student.id !== action.payload),\n        loading: false,\n        error: null\n      };\n    case ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n        error: action.payload ? null : state.error\n      };\n    case ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case ACTIONS.SET_COURSES:\n      return {\n        ...state,\n        courses: action.payload,\n        coursesLoading: false,\n        coursesError: null\n      };\n    case ACTIONS.SET_COURSES_LOADING:\n      return {\n        ...state,\n        coursesLoading: action.payload,\n        coursesError: action.payload ? null : state.coursesError\n      };\n    case ACTIONS.SET_COURSES_ERROR:\n      return {\n        ...state,\n        coursesError: action.payload,\n        coursesLoading: false\n      };\n    case ACTIONS.SET_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: action.payload\n      };\n    case ACTIONS.SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create the context\nconst StudentContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the student context\nexport const useStudentContext = () => {\n  _s();\n  const context = useContext(StudentContext);\n  if (!context) {\n    throw new Error('useStudentContext must be used within a StudentProvider');\n  }\n  return context;\n};\n\n// Provider component\n_s(useStudentContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const StudentProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(studentReducer, initialState);\n\n  // Memoized computed values to prevent unnecessary re-renders\n  const filteredStudents = useMemo(() => {\n    let filtered = state.students;\n\n    // Apply search filter\n    if (state.searchTerm) {\n      const searchLower = state.searchTerm.toLowerCase();\n      filtered = filtered.filter(student => student.name.toLowerCase().includes(searchLower) || student.email.toLowerCase().includes(searchLower) || student.course.toLowerCase().includes(searchLower));\n    }\n\n    // Apply status filter\n    if (state.filter !== 'all') {\n      filtered = filtered.filter(student => student.status === state.filter);\n    }\n    return filtered;\n  }, [state.students, state.searchTerm, state.filter]);\n\n  // Memoized statistics to prevent recalculation on every render\n  const stats = useMemo(() => {\n    const total = state.students.length;\n    const active = state.students.filter(s => !s.status || s.status === 'active').length;\n    const graduated = state.students.filter(s => s.status === 'graduated').length;\n    return {\n      totalStudents: total,\n      activeStudents: active,\n      graduatedStudents: graduated\n    };\n  }, [state.students]);\n\n  // Action creators using useCallback to prevent unnecessary re-renders\n  const addStudent = useCallback(studentData => {\n    dispatch({\n      type: ACTIONS.SET_LOADING,\n      payload: true\n    });\n\n    // Simulate async operation\n    setTimeout(() => {\n      const newStudent = {\n        id: Date.now().toString(36) + Math.random().toString(36).substr(2, 9),\n        ...studentData,\n        createdAt: new Date().toISOString(),\n        status: 'active'\n      };\n      dispatch({\n        type: ACTIONS.ADD_STUDENT,\n        payload: newStudent\n      });\n\n      // Save to localStorage\n      const currentStudents = JSON.parse(localStorage.getItem('students') || '[]');\n      localStorage.setItem('students', JSON.stringify([...currentStudents, newStudent]));\n    }, 500);\n  }, []);\n  const updateStudent = useCallback(studentData => {\n    dispatch({\n      type: ACTIONS.SET_LOADING,\n      payload: true\n    });\n    setTimeout(() => {\n      dispatch({\n        type: ACTIONS.UPDATE_STUDENT,\n        payload: studentData\n      });\n\n      // Update localStorage\n      const currentStudents = JSON.parse(localStorage.getItem('students') || '[]');\n      const updatedStudents = currentStudents.map(student => student.id === studentData.id ? studentData : student);\n      localStorage.setItem('students', JSON.stringify(updatedStudents));\n    }, 300);\n  }, []);\n  const deleteStudent = useCallback(studentId => {\n    dispatch({\n      type: ACTIONS.SET_LOADING,\n      payload: true\n    });\n    setTimeout(() => {\n      dispatch({\n        type: ACTIONS.DELETE_STUDENT,\n        payload: studentId\n      });\n\n      // Update localStorage\n      const currentStudents = JSON.parse(localStorage.getItem('students') || '[]');\n      const filteredStudents = currentStudents.filter(student => student.id !== studentId);\n      localStorage.setItem('students', JSON.stringify(filteredStudents));\n    }, 200);\n  }, []);\n  const setSearchTerm = useCallback(term => {\n    dispatch({\n      type: ACTIONS.SET_SEARCH_TERM,\n      payload: term\n    });\n  }, []);\n  const setFilter = useCallback(filter => {\n    dispatch({\n      type: ACTIONS.SET_FILTER,\n      payload: filter\n    });\n  }, []);\n  const loadStudents = useCallback(() => {\n    dispatch({\n      type: ACTIONS.SET_LOADING,\n      payload: true\n    });\n    setTimeout(() => {\n      try {\n        const savedStudents = localStorage.getItem('students');\n        if (savedStudents) {\n          dispatch({\n            type: ACTIONS.SET_STUDENTS,\n            payload: JSON.parse(savedStudents)\n          });\n        } else {\n          // Load sample data\n          const sampleStudents = [{\n            id: 'sample_1',\n            name: 'John Doe',\n            email: 'john.doe@example.com',\n            course: 'Computer Science',\n            image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n            createdAt: new Date().toISOString(),\n            status: 'active'\n          }, {\n            id: 'sample_2',\n            name: 'Jane Smith',\n            email: 'jane.smith@example.com',\n            course: 'Mathematics',\n            image: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n            createdAt: new Date().toISOString(),\n            status: 'active'\n          }, {\n            id: 'sample_3',\n            name: 'Mike Johnson',\n            email: 'mike.johnson@example.com',\n            course: 'Physics',\n            image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n            createdAt: new Date().toISOString(),\n            status: 'active'\n          }];\n          dispatch({\n            type: ACTIONS.SET_STUDENTS,\n            payload: sampleStudents\n          });\n          localStorage.setItem('students', JSON.stringify(sampleStudents));\n        }\n      } catch (error) {\n        dispatch({\n          type: ACTIONS.SET_ERROR,\n          payload: 'Failed to load students'\n        });\n      }\n    }, 1000);\n  }, []);\n\n  // Context value memoized to prevent unnecessary re-renders\n  const contextValue = useMemo(() => ({\n    // State\n    students: state.students,\n    courses: state.courses,\n    loading: state.loading,\n    error: state.error,\n    coursesLoading: state.coursesLoading,\n    coursesError: state.coursesError,\n    searchTerm: state.searchTerm,\n    filter: state.filter,\n    // Computed values\n    filteredStudents,\n    stats,\n    // Actions\n    addStudent,\n    updateStudent,\n    deleteStudent,\n    setSearchTerm,\n    setFilter,\n    loadStudents,\n    // Dispatch for direct access if needed\n    dispatch\n  }), [state.students, state.courses, state.loading, state.error, state.coursesLoading, state.coursesError, state.searchTerm, state.filter, filteredStudents, stats, addStudent, updateStudent, deleteStudent, setSearchTerm, setFilter, loadStudents]);\n  return /*#__PURE__*/_jsxDEV(StudentContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n_s2(StudentProvider, \"yjYh/kwT8s79jcMJqA+1z8dwdAQ=\");\n_c = StudentProvider;\nvar _c;\n$RefreshReg$(_c, \"StudentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","useMemo","jsxDEV","_jsxDEV","ACTIONS","SET_STUDENTS","ADD_STUDENT","UPDATE_STUDENT","DELETE_STUDENT","SET_LOADING","SET_ERROR","SET_COURSES","SET_COURSES_LOADING","SET_COURSES_ERROR","SET_SEARCH_TERM","SET_FILTER","initialState","students","courses","loading","error","coursesLoading","coursesError","searchTerm","filter","stats","totalStudents","activeStudents","graduatedStudents","studentReducer","state","action","type","payload","map","student","id","StudentContext","useStudentContext","_s","context","Error","StudentProvider","children","_s2","dispatch","filteredStudents","filtered","searchLower","toLowerCase","name","includes","email","course","status","total","length","active","s","graduated","addStudent","studentData","setTimeout","newStudent","Date","now","toString","Math","random","substr","createdAt","toISOString","currentStudents","JSON","parse","localStorage","getItem","setItem","stringify","updateStudent","updatedStudents","deleteStudent","studentId","setSearchTerm","term","setFilter","loadStudents","savedStudents","sampleStudents","image","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sagar Nikam/Desktop/NavG_task/src/context/StudentContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback, useMemo } from 'react';\r\n\r\n// Action types for the reducer\r\nconst ACTIONS = {\r\n  SET_STUDENTS: 'SET_STUDENTS',\r\n  ADD_STUDENT: 'ADD_STUDENT',\r\n  UPDATE_STUDENT: 'UPDATE_STUDENT',\r\n  DELETE_STUDENT: 'DELETE_STUDENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_ERROR: 'SET_ERROR',\r\n  SET_COURSES: 'SET_COURSES',\r\n  SET_COURSES_LOADING: 'SET_COURSES_LOADING',\r\n  SET_COURSES_ERROR: 'SET_COURSES_ERROR',\r\n  SET_SEARCH_TERM: 'SET_SEARCH_TERM',\r\n  SET_FILTER: 'SET_FILTER'\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  students: [],\r\n  courses: [],\r\n  loading: false,\r\n  error: null,\r\n  coursesLoading: false,\r\n  coursesError: null,\r\n  searchTerm: '',\r\n  filter: 'all', // all, active, graduated\r\n  stats: {\r\n    totalStudents: 0,\r\n    activeStudents: 0,\r\n    graduatedStudents: 0\r\n  }\r\n};\r\n\r\n// Reducer function to handle state updates\r\nconst studentReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.SET_STUDENTS:\r\n      return {\r\n        ...state,\r\n        students: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n      \r\n    case ACTIONS.ADD_STUDENT:\r\n      return {\r\n        ...state,\r\n        students: [...state.students, action.payload],\r\n        loading: false,\r\n        error: null\r\n      };\r\n      \r\n    case ACTIONS.UPDATE_STUDENT:\r\n      return {\r\n        ...state,\r\n        students: state.students.map(student =>\r\n          student.id === action.payload.id ? action.payload : student\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n      \r\n    case ACTIONS.DELETE_STUDENT:\r\n      return {\r\n        ...state,\r\n        students: state.students.filter(student => student.id !== action.payload),\r\n        loading: false,\r\n        error: null\r\n      };\r\n      \r\n    case ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n        error: action.payload ? null : state.error\r\n      };\r\n      \r\n    case ACTIONS.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n      \r\n    case ACTIONS.SET_COURSES:\r\n      return {\r\n        ...state,\r\n        courses: action.payload,\r\n        coursesLoading: false,\r\n        coursesError: null\r\n      };\r\n      \r\n    case ACTIONS.SET_COURSES_LOADING:\r\n      return {\r\n        ...state,\r\n        coursesLoading: action.payload,\r\n        coursesError: action.payload ? null : state.coursesError\r\n      };\r\n      \r\n    case ACTIONS.SET_COURSES_ERROR:\r\n      return {\r\n        ...state,\r\n        coursesError: action.payload,\r\n        coursesLoading: false\r\n      };\r\n      \r\n    case ACTIONS.SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload\r\n      };\r\n      \r\n    case ACTIONS.SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create the context\r\nconst StudentContext = createContext();\r\n\r\n// Custom hook to use the student context\r\nexport const useStudentContext = () => {\r\n  const context = useContext(StudentContext);\r\n  if (!context) {\r\n    throw new Error('useStudentContext must be used within a StudentProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Provider component\r\nexport const StudentProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(studentReducer, initialState);\r\n\r\n  // Memoized computed values to prevent unnecessary re-renders\r\n  const filteredStudents = useMemo(() => {\r\n    let filtered = state.students;\r\n\r\n    // Apply search filter\r\n    if (state.searchTerm) {\r\n      const searchLower = state.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(student =>\r\n        student.name.toLowerCase().includes(searchLower) ||\r\n        student.email.toLowerCase().includes(searchLower) ||\r\n        student.course.toLowerCase().includes(searchLower)\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (state.filter !== 'all') {\r\n      filtered = filtered.filter(student => student.status === state.filter);\r\n    }\r\n\r\n    return filtered;\r\n  }, [state.students, state.searchTerm, state.filter]);\r\n\r\n  // Memoized statistics to prevent recalculation on every render\r\n  const stats = useMemo(() => {\r\n    const total = state.students.length;\r\n    const active = state.students.filter(s => !s.status || s.status === 'active').length;\r\n    const graduated = state.students.filter(s => s.status === 'graduated').length;\r\n\r\n    return { totalStudents: total, activeStudents: active, graduatedStudents: graduated };\r\n  }, [state.students]);\r\n\r\n  // Action creators using useCallback to prevent unnecessary re-renders\r\n  const addStudent = useCallback((studentData) => {\r\n    dispatch({ type: ACTIONS.SET_LOADING, payload: true });\r\n    \r\n    // Simulate async operation\r\n    setTimeout(() => {\r\n      const newStudent = {\r\n        id: Date.now().toString(36) + Math.random().toString(36).substr(2, 9),\r\n        ...studentData,\r\n        createdAt: new Date().toISOString(),\r\n        status: 'active'\r\n      };\r\n      \r\n      dispatch({ type: ACTIONS.ADD_STUDENT, payload: newStudent });\r\n      \r\n      // Save to localStorage\r\n      const currentStudents = JSON.parse(localStorage.getItem('students') || '[]');\r\n      localStorage.setItem('students', JSON.stringify([...currentStudents, newStudent]));\r\n    }, 500);\r\n  }, []);\r\n\r\n  const updateStudent = useCallback((studentData) => {\r\n    dispatch({ type: ACTIONS.SET_LOADING, payload: true });\r\n    \r\n    setTimeout(() => {\r\n      dispatch({ type: ACTIONS.UPDATE_STUDENT, payload: studentData });\r\n      \r\n      // Update localStorage\r\n      const currentStudents = JSON.parse(localStorage.getItem('students') || '[]');\r\n      const updatedStudents = currentStudents.map(student =>\r\n        student.id === studentData.id ? studentData : student\r\n      );\r\n      localStorage.setItem('students', JSON.stringify(updatedStudents));\r\n    }, 300);\r\n  }, []);\r\n\r\n  const deleteStudent = useCallback((studentId) => {\r\n    dispatch({ type: ACTIONS.SET_LOADING, payload: true });\r\n    \r\n    setTimeout(() => {\r\n      dispatch({ type: ACTIONS.DELETE_STUDENT, payload: studentId });\r\n      \r\n      // Update localStorage\r\n      const currentStudents = JSON.parse(localStorage.getItem('students') || '[]');\r\n      const filteredStudents = currentStudents.filter(student => student.id !== studentId);\r\n      localStorage.setItem('students', JSON.stringify(filteredStudents));\r\n    }, 200);\r\n  }, []);\r\n\r\n  const setSearchTerm = useCallback((term) => {\r\n    dispatch({ type: ACTIONS.SET_SEARCH_TERM, payload: term });\r\n  }, []);\r\n\r\n  const setFilter = useCallback((filter) => {\r\n    dispatch({ type: ACTIONS.SET_FILTER, payload: filter });\r\n  }, []);\r\n\r\n  const loadStudents = useCallback(() => {\r\n    dispatch({ type: ACTIONS.SET_LOADING, payload: true });\r\n    \r\n    setTimeout(() => {\r\n      try {\r\n        const savedStudents = localStorage.getItem('students');\r\n        if (savedStudents) {\r\n          dispatch({ type: ACTIONS.SET_STUDENTS, payload: JSON.parse(savedStudents) });\r\n        } else {\r\n          // Load sample data\r\n          const sampleStudents = [\r\n            {\r\n              id: 'sample_1',\r\n              name: 'John Doe',\r\n              email: 'john.doe@example.com',\r\n              course: 'Computer Science',\r\n              image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\r\n              createdAt: new Date().toISOString(),\r\n              status: 'active'\r\n            },\r\n            {\r\n              id: 'sample_2',\r\n              name: 'Jane Smith',\r\n              email: 'jane.smith@example.com',\r\n              course: 'Mathematics',\r\n              image: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\r\n              createdAt: new Date().toISOString(),\r\n              status: 'active'\r\n            },\r\n            {\r\n              id: 'sample_3',\r\n              name: 'Mike Johnson',\r\n              email: 'mike.johnson@example.com',\r\n              course: 'Physics',\r\n              image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n              createdAt: new Date().toISOString(),\r\n              status: 'active'\r\n            }\r\n          ];\r\n          dispatch({ type: ACTIONS.SET_STUDENTS, payload: sampleStudents });\r\n          localStorage.setItem('students', JSON.stringify(sampleStudents));\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: ACTIONS.SET_ERROR, payload: 'Failed to load students' });\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Context value memoized to prevent unnecessary re-renders\r\n  const contextValue = useMemo(() => ({\r\n    // State\r\n    students: state.students,\r\n    courses: state.courses,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    coursesLoading: state.coursesLoading,\r\n    coursesError: state.coursesError,\r\n    searchTerm: state.searchTerm,\r\n    filter: state.filter,\r\n    \r\n    // Computed values\r\n    filteredStudents,\r\n    stats,\r\n    \r\n    // Actions\r\n    addStudent,\r\n    updateStudent,\r\n    deleteStudent,\r\n    setSearchTerm,\r\n    setFilter,\r\n    loadStudents,\r\n    \r\n    // Dispatch for direct access if needed\r\n    dispatch\r\n  }), [\r\n    state.students,\r\n    state.courses,\r\n    state.loading,\r\n    state.error,\r\n    state.coursesLoading,\r\n    state.coursesError,\r\n    state.searchTerm,\r\n    state.filter,\r\n    filteredStudents,\r\n    stats,\r\n    addStudent,\r\n    updateStudent,\r\n    deleteStudent,\r\n    setSearchTerm,\r\n    setFilter,\r\n    loadStudents\r\n  ]);\r\n\r\n  return (\r\n    <StudentContext.Provider value={contextValue}>\r\n      {children}\r\n    </StudentContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;;AAE1F;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG;EACdC,YAAY,EAAE,cAAc;EAC5BC,WAAW,EAAE,aAAa;EAC1BC,cAAc,EAAE,gBAAgB;EAChCC,cAAc,EAAE,gBAAgB;EAChCC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE,aAAa;EAC1BC,mBAAmB,EAAE,qBAAqB;EAC1CC,iBAAiB,EAAE,mBAAmB;EACtCC,eAAe,EAAE,iBAAiB;EAClCC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,cAAc,EAAE,KAAK;EACrBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,KAAK;EAAE;EACfC,KAAK,EAAE;IACLC,aAAa,EAAE,CAAC;IAChBC,cAAc,EAAE,CAAC;IACjBC,iBAAiB,EAAE;EACrB;AACF,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK5B,OAAO,CAACC,YAAY;MACvB,OAAO;QACL,GAAGyB,KAAK;QACRb,QAAQ,EAAEc,MAAM,CAACE,OAAO;QACxBd,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IAEH,KAAKhB,OAAO,CAACE,WAAW;MACtB,OAAO;QACL,GAAGwB,KAAK;QACRb,QAAQ,EAAE,CAAC,GAAGa,KAAK,CAACb,QAAQ,EAAEc,MAAM,CAACE,OAAO,CAAC;QAC7Cd,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IAEH,KAAKhB,OAAO,CAACG,cAAc;MACzB,OAAO;QACL,GAAGuB,KAAK;QACRb,QAAQ,EAAEa,KAAK,CAACb,QAAQ,CAACiB,GAAG,CAACC,OAAO,IAClCA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAGL,MAAM,CAACE,OAAO,GAAGE,OACtD,CAAC;QACDhB,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IAEH,KAAKhB,OAAO,CAACI,cAAc;MACzB,OAAO;QACL,GAAGsB,KAAK;QACRb,QAAQ,EAAEa,KAAK,CAACb,QAAQ,CAACO,MAAM,CAACW,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;QACzEd,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IAEH,KAAKhB,OAAO,CAACK,WAAW;MACtB,OAAO;QACL,GAAGqB,KAAK;QACRX,OAAO,EAAEY,MAAM,CAACE,OAAO;QACvBb,KAAK,EAAEW,MAAM,CAACE,OAAO,GAAG,IAAI,GAAGH,KAAK,CAACV;MACvC,CAAC;IAEH,KAAKhB,OAAO,CAACM,SAAS;MACpB,OAAO;QACL,GAAGoB,KAAK;QACRV,KAAK,EAAEW,MAAM,CAACE,OAAO;QACrBd,OAAO,EAAE;MACX,CAAC;IAEH,KAAKf,OAAO,CAACO,WAAW;MACtB,OAAO;QACL,GAAGmB,KAAK;QACRZ,OAAO,EAAEa,MAAM,CAACE,OAAO;QACvBZ,cAAc,EAAE,KAAK;QACrBC,YAAY,EAAE;MAChB,CAAC;IAEH,KAAKlB,OAAO,CAACQ,mBAAmB;MAC9B,OAAO;QACL,GAAGkB,KAAK;QACRT,cAAc,EAAEU,MAAM,CAACE,OAAO;QAC9BX,YAAY,EAAES,MAAM,CAACE,OAAO,GAAG,IAAI,GAAGH,KAAK,CAACR;MAC9C,CAAC;IAEH,KAAKlB,OAAO,CAACS,iBAAiB;MAC5B,OAAO;QACL,GAAGiB,KAAK;QACRR,YAAY,EAAES,MAAM,CAACE,OAAO;QAC5BZ,cAAc,EAAE;MAClB,CAAC;IAEH,KAAKjB,OAAO,CAACU,eAAe;MAC1B,OAAO;QACL,GAAGgB,KAAK;QACRP,UAAU,EAAEQ,MAAM,CAACE;MACrB,CAAC;IAEH,KAAK7B,OAAO,CAACW,UAAU;MACrB,OAAO;QACL,GAAGe,KAAK;QACRN,MAAM,EAAEO,MAAM,CAACE;MACjB,CAAC;IAEH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMO,cAAc,gBAAGxC,aAAa,CAAC,CAAC;;AAEtC;AACA,OAAO,MAAMyC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAMC,OAAO,GAAG1C,UAAU,CAACuC,cAAc,CAAC;EAC1C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yDAAyD,CAAC;EAC5E;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,iBAAiB;AAS9B,OAAO,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACd,KAAK,EAAEe,QAAQ,CAAC,GAAG9C,UAAU,CAAC8B,cAAc,EAAEb,YAAY,CAAC;;EAElE;EACA,MAAM8B,gBAAgB,GAAG7C,OAAO,CAAC,MAAM;IACrC,IAAI8C,QAAQ,GAAGjB,KAAK,CAACb,QAAQ;;IAE7B;IACA,IAAIa,KAAK,CAACP,UAAU,EAAE;MACpB,MAAMyB,WAAW,GAAGlB,KAAK,CAACP,UAAU,CAAC0B,WAAW,CAAC,CAAC;MAClDF,QAAQ,GAAGA,QAAQ,CAACvB,MAAM,CAACW,OAAO,IAChCA,OAAO,CAACe,IAAI,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,WAAW,CAAC,IAChDb,OAAO,CAACiB,KAAK,CAACH,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,WAAW,CAAC,IACjDb,OAAO,CAACkB,MAAM,CAACJ,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,WAAW,CACnD,CAAC;IACH;;IAEA;IACA,IAAIlB,KAAK,CAACN,MAAM,KAAK,KAAK,EAAE;MAC1BuB,QAAQ,GAAGA,QAAQ,CAACvB,MAAM,CAACW,OAAO,IAAIA,OAAO,CAACmB,MAAM,KAAKxB,KAAK,CAACN,MAAM,CAAC;IACxE;IAEA,OAAOuB,QAAQ;EACjB,CAAC,EAAE,CAACjB,KAAK,CAACb,QAAQ,EAAEa,KAAK,CAACP,UAAU,EAAEO,KAAK,CAACN,MAAM,CAAC,CAAC;;EAEpD;EACA,MAAMC,KAAK,GAAGxB,OAAO,CAAC,MAAM;IAC1B,MAAMsD,KAAK,GAAGzB,KAAK,CAACb,QAAQ,CAACuC,MAAM;IACnC,MAAMC,MAAM,GAAG3B,KAAK,CAACb,QAAQ,CAACO,MAAM,CAACkC,CAAC,IAAI,CAACA,CAAC,CAACJ,MAAM,IAAII,CAAC,CAACJ,MAAM,KAAK,QAAQ,CAAC,CAACE,MAAM;IACpF,MAAMG,SAAS,GAAG7B,KAAK,CAACb,QAAQ,CAACO,MAAM,CAACkC,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAK,WAAW,CAAC,CAACE,MAAM;IAE7E,OAAO;MAAE9B,aAAa,EAAE6B,KAAK;MAAE5B,cAAc,EAAE8B,MAAM;MAAE7B,iBAAiB,EAAE+B;IAAU,CAAC;EACvF,CAAC,EAAE,CAAC7B,KAAK,CAACb,QAAQ,CAAC,CAAC;;EAEpB;EACA,MAAM2C,UAAU,GAAG5D,WAAW,CAAE6D,WAAW,IAAK;IAC9ChB,QAAQ,CAAC;MAAEb,IAAI,EAAE5B,OAAO,CAACK,WAAW;MAAEwB,OAAO,EAAE;IAAK,CAAC,CAAC;;IAEtD;IACA6B,UAAU,CAAC,MAAM;MACf,MAAMC,UAAU,GAAG;QACjB3B,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QACrE,GAAGR,WAAW;QACdS,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;QACnCjB,MAAM,EAAE;MACV,CAAC;MAEDT,QAAQ,CAAC;QAAEb,IAAI,EAAE5B,OAAO,CAACE,WAAW;QAAE2B,OAAO,EAAE8B;MAAW,CAAC,CAAC;;MAE5D;MACA,MAAMS,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;MAC5ED,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAAC,CAAC,GAAGN,eAAe,EAAET,UAAU,CAAC,CAAC,CAAC;IACpF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,aAAa,GAAG/E,WAAW,CAAE6D,WAAW,IAAK;IACjDhB,QAAQ,CAAC;MAAEb,IAAI,EAAE5B,OAAO,CAACK,WAAW;MAAEwB,OAAO,EAAE;IAAK,CAAC,CAAC;IAEtD6B,UAAU,CAAC,MAAM;MACfjB,QAAQ,CAAC;QAAEb,IAAI,EAAE5B,OAAO,CAACG,cAAc;QAAE0B,OAAO,EAAE4B;MAAY,CAAC,CAAC;;MAEhE;MACA,MAAMW,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;MAC5E,MAAMI,eAAe,GAAGR,eAAe,CAACtC,GAAG,CAACC,OAAO,IACjDA,OAAO,CAACC,EAAE,KAAKyB,WAAW,CAACzB,EAAE,GAAGyB,WAAW,GAAG1B,OAChD,CAAC;MACDwC,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAACE,eAAe,CAAC,CAAC;IACnE,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAGjF,WAAW,CAAEkF,SAAS,IAAK;IAC/CrC,QAAQ,CAAC;MAAEb,IAAI,EAAE5B,OAAO,CAACK,WAAW;MAAEwB,OAAO,EAAE;IAAK,CAAC,CAAC;IAEtD6B,UAAU,CAAC,MAAM;MACfjB,QAAQ,CAAC;QAAEb,IAAI,EAAE5B,OAAO,CAACI,cAAc;QAAEyB,OAAO,EAAEiD;MAAU,CAAC,CAAC;;MAE9D;MACA,MAAMV,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;MAC5E,MAAM9B,gBAAgB,GAAG0B,eAAe,CAAChD,MAAM,CAACW,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAK8C,SAAS,CAAC;MACpFP,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAAChC,gBAAgB,CAAC,CAAC;IACpE,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqC,aAAa,GAAGnF,WAAW,CAAEoF,IAAI,IAAK;IAC1CvC,QAAQ,CAAC;MAAEb,IAAI,EAAE5B,OAAO,CAACU,eAAe;MAAEmB,OAAO,EAAEmD;IAAK,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGrF,WAAW,CAAEwB,MAAM,IAAK;IACxCqB,QAAQ,CAAC;MAAEb,IAAI,EAAE5B,OAAO,CAACW,UAAU;MAAEkB,OAAO,EAAET;IAAO,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM8D,YAAY,GAAGtF,WAAW,CAAC,MAAM;IACrC6C,QAAQ,CAAC;MAAEb,IAAI,EAAE5B,OAAO,CAACK,WAAW;MAAEwB,OAAO,EAAE;IAAK,CAAC,CAAC;IAEtD6B,UAAU,CAAC,MAAM;MACf,IAAI;QACF,MAAMyB,aAAa,GAAGZ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACtD,IAAIW,aAAa,EAAE;UACjB1C,QAAQ,CAAC;YAAEb,IAAI,EAAE5B,OAAO,CAACC,YAAY;YAAE4B,OAAO,EAAEwC,IAAI,CAACC,KAAK,CAACa,aAAa;UAAE,CAAC,CAAC;QAC9E,CAAC,MAAM;UACL;UACA,MAAMC,cAAc,GAAG,CACrB;YACEpD,EAAE,EAAE,UAAU;YACdc,IAAI,EAAE,UAAU;YAChBE,KAAK,EAAE,sBAAsB;YAC7BC,MAAM,EAAE,kBAAkB;YAC1BoC,KAAK,EAAE,6FAA6F;YACpGnB,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;YACnCjB,MAAM,EAAE;UACV,CAAC,EACD;YACElB,EAAE,EAAE,UAAU;YACdc,IAAI,EAAE,YAAY;YAClBE,KAAK,EAAE,wBAAwB;YAC/BC,MAAM,EAAE,aAAa;YACrBoC,KAAK,EAAE,6FAA6F;YACpGnB,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;YACnCjB,MAAM,EAAE;UACV,CAAC,EACD;YACElB,EAAE,EAAE,UAAU;YACdc,IAAI,EAAE,cAAc;YACpBE,KAAK,EAAE,0BAA0B;YACjCC,MAAM,EAAE,SAAS;YACjBoC,KAAK,EAAE,6FAA6F;YACpGnB,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;YACnCjB,MAAM,EAAE;UACV,CAAC,CACF;UACDT,QAAQ,CAAC;YAAEb,IAAI,EAAE5B,OAAO,CAACC,YAAY;YAAE4B,OAAO,EAAEuD;UAAe,CAAC,CAAC;UACjEb,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAACU,cAAc,CAAC,CAAC;QAClE;MACF,CAAC,CAAC,OAAOpE,KAAK,EAAE;QACdyB,QAAQ,CAAC;UAAEb,IAAI,EAAE5B,OAAO,CAACM,SAAS;UAAEuB,OAAO,EAAE;QAA0B,CAAC,CAAC;MAC3E;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMyD,YAAY,GAAGzF,OAAO,CAAC,OAAO;IAClC;IACAgB,QAAQ,EAAEa,KAAK,CAACb,QAAQ;IACxBC,OAAO,EAAEY,KAAK,CAACZ,OAAO;IACtBC,OAAO,EAAEW,KAAK,CAACX,OAAO;IACtBC,KAAK,EAAEU,KAAK,CAACV,KAAK;IAClBC,cAAc,EAAES,KAAK,CAACT,cAAc;IACpCC,YAAY,EAAEQ,KAAK,CAACR,YAAY;IAChCC,UAAU,EAAEO,KAAK,CAACP,UAAU;IAC5BC,MAAM,EAAEM,KAAK,CAACN,MAAM;IAEpB;IACAsB,gBAAgB;IAChBrB,KAAK;IAEL;IACAmC,UAAU;IACVmB,aAAa;IACbE,aAAa;IACbE,aAAa;IACbE,SAAS;IACTC,YAAY;IAEZ;IACAzC;EACF,CAAC,CAAC,EAAE,CACFf,KAAK,CAACb,QAAQ,EACda,KAAK,CAACZ,OAAO,EACbY,KAAK,CAACX,OAAO,EACbW,KAAK,CAACV,KAAK,EACXU,KAAK,CAACT,cAAc,EACpBS,KAAK,CAACR,YAAY,EAClBQ,KAAK,CAACP,UAAU,EAChBO,KAAK,CAACN,MAAM,EACZsB,gBAAgB,EAChBrB,KAAK,EACLmC,UAAU,EACVmB,aAAa,EACbE,aAAa,EACbE,aAAa,EACbE,SAAS,EACTC,YAAY,CACb,CAAC;EAEF,oBACEnF,OAAA,CAACkC,cAAc,CAACsD,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAA/C,QAAA,EAC1CA;EAAQ;IAAAkD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACpD,GAAA,CA7LWF,eAAe;AAAAuD,EAAA,GAAfvD,eAAe;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}